name: Yaml config update

# ===== CONFIGURATION =====
on:
  push:
    paths:
      - 'config/**'  # Change this to your config directory path
    branches:
      - main  # Change this to your default branch

env:
  # Azure Configuration
  CONTAINER_APP_NAME:         ${{ vars.CONTAINER_APP_NAME }}
  AZURE_RESOURCE_GROUP:       ${{ vars.AZURE_RESOURCE_GROUP }}
  AZURE_SUBSCRIPTION:         ${{ vars.AZURE_SUBSCRIPTION_ID }}
  AZURE_CREDENTIALS:          ${{ secrets.AZURE_CREDENTIALS }}

  # Directory Configuration
  CONFIG_DIR_SOURCE:          config                  # Source directory in your repo
  CONFIG_DIR_DEST:            ${{ CONFIG_DIR_DEST }}  # Destination directory in container
  
  # Optional Configuration
  CONTAINER_APP_REVISION:     latest                  # Optional: specify a specific revision
  TIMEOUT_MINUTES:            10                      # Timeout for operations

# ===== WORKFLOW DEFINITION =====
jobs:
  deploy-configs:
    runs-on: ubuntu-latest
    timeout-minutes: ${{ env.TIMEOUT_MINUTES }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}
        # with:
        #   client-id:        ${{ env.AZURE_CLIENT_ID }}
        #   tenant-id:        ${{ env.AZURE_TENANT_ID }}
        #   subscription-id:  ${{ env.AZURE_SUBSCRIPTION_ID }}          

      - name: Create temp directory for configs
        run: |
          TEMP_DIR=$(mktemp -d)
          cp -r ${{ env.CONFIG_DIR_SOURCE }}/* $TEMP_DIR/
          echo "TEMP_DIR=$TEMP_DIR" >> $GITHUB_ENV

      - name: Create destination directory in Container App
        run: |
          az containerapp exec \
            --name                ${{ env.AZURE_CONTAINER_APP_NAME }} \
            --resource-group      ${{ env.AZURE_RESOURCE_GROUP }} \
            --subscription        ${{ env.AZURE_SUBSCRIPTION }} \
            --command "mkdir -p   ${{ env.CONFIG_DIR_DEST }}"

      - name: Copy config files to Container App
        run: |
          # Loop through all files in the source directory
          for file in $TEMP_DIR/*; do
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              echo "Copying $filename..."
              
              # Copy each file to the Container App
              az containerapp exec \
                --name            ${{ env.AZURE_CONTAINER_APP_NAME }} \
                --resource-group  ${{ env.AZURE_RESOURCE_GROUP }} \
                --subscription    ${{ env.AZURE_SUBSCRIPTION }} \
                --command "cat >  ${{ env.CONFIG_DIR_DEST }}/$filename" \
                < "$file"
            fi
          done

      - name: Verify files were copied
        run: |
          echo "Listing copied files..."
          az containerapp exec \
            --name                ${{ env.AZURE_CONTAINER_APP_NAME }} \
            --resource-group      ${{ env.AZURE_RESOURCE_GROUP }} \
            --subscription        ${{ env.AZURE_SUBSCRIPTION }} \
            --command "ls -la     ${{ env.CONFIG_DIR_DEST }}"

      - name: Restart Container App
        run: |
          az containerapp restart \
            --name                ${{ env.AZURE_CONTAINER_APP_NAME }} \
            --resource-group      ${{ env.AZURE_RESOURCE_GROUP }} \
            --subscription        ${{ env.AZURE_SUBSCRIPTION }}

      - name: Clean up temp directory
        if: always()
        run: |
          rm -rf $TEMP_DIR

      - name: Log out from Azure
        if: always()
        run: |
          az logout